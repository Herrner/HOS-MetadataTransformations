[
  {
    "op": "core/column-removal",
    "description": "Remove column metadata",
    "columnName": "metadata"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column metadata - oai_dc:dc",
    "columnName": "metadata - oai_dc:dc"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:description to description",
    "oldColumnName": "metadata - oai_dc:dc - dc:description",
    "newColumnName": "description"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:title to title",
    "oldColumnName": "metadata - oai_dc:dc - dc:title",
    "newColumnName": "title"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:language to language",
    "oldColumnName": "metadata - oai_dc:dc - dc:language",
    "newColumnName": "language"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:creator to creatorName",
    "oldColumnName": "metadata - oai_dc:dc - dc:creator",
    "newColumnName": "creatorName"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:date to date",
    "oldColumnName": "metadata - oai_dc:dc - dc:date",
    "newColumnName": "date"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:publisher to publisher",
    "oldColumnName": "metadata - oai_dc:dc - dc:publisher",
    "newColumnName": "publisher"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column metadata - oai_dc:dc - xsi:schemaLocation",
    "columnName": "metadata - oai_dc:dc - xsi:schemaLocation"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:subject to subject",
    "oldColumnName": "metadata - oai_dc:dc - dc:subject",
    "newColumnName": "subject"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:identifier to identifier",
    "oldColumnName": "metadata - oai_dc:dc - dc:identifier",
    "newColumnName": "identifier"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:contributor to contributor",
    "oldColumnName": "metadata - oai_dc:dc - dc:contributor",
    "newColumnName": "contributor"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:source to source",
    "oldColumnName": "metadata - oai_dc:dc - dc:source",
    "newColumnName": "source"
  },
  {
    "op": "core/column-addition",
    "description": "Create column publicationYear at index 9 based on column date using expression grel:substring(value,0,4)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "publicationYear",
    "columnInsertIndex": 9,
    "baseColumnName": "date",
    "expression": "grel:substring(value,0,4)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column subjectDDC at index 1 based on column subject using expression grel:if(startsWith(value,\"ddc:\"),substring(value,4,9),\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "subjectDDC",
    "columnInsertIndex": 1,
    "baseColumnName": "subject",
    "expression": "grel:if(startsWith(value,\"ddc:\"),substring(value,4,9),\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column URI at index 3 based on column identifier using expression grel:if(startsWith(value,\"http\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "URI",
    "columnInsertIndex": 3,
    "baseColumnName": "identifier",
    "expression": "grel:if(startsWith(value,\"http\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column identifier to identifier_mult",
    "oldColumnName": "identifier",
    "newColumnName": "identifier_mult"
  },
  {
    "op": "core/column-addition",
    "description": "Create column identifier at index 3 based on column identifier_mult using expression grel:replace(value,\"http://dx.doi.org/\",\"\")value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "doi",
          "name": "identifier_mult",
          "type": "text",
          "columnName": "identifier_mult"
        }
      ]
    },
    "newColumnName": "identifier",
    "columnInsertIndex": 3,
    "baseColumnName": "identifier_mult",
    "expression": "grel:replace(value,\"http://dx.doi.org/\",\"\")value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column identifier to position 0",
    "columnName": "identifier",
    "index": 0
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "record-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": true,
          "name": "identifier",
          "omitBlank": false,
          "type": "list",
          "columnName": "identifier"
        }
      ]
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column alternateIdentifier at index 4 based on column identifier_mult using expression grel:if(startsWith(value,\"urn\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "alternateIdentifier",
    "columnInsertIndex": 4,
    "baseColumnName": "identifier_mult",
    "expression": "grel:if(startsWith(value,\"urn\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column alternateIdentifierType at index 5 based on column alternateIdentifier using expression grel:if(startsWith(value,\"urn\"),'URN',\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "alternateIdentifierType",
    "columnInsertIndex": 5,
    "baseColumnName": "alternateIdentifier",
    "expression": "grel:if(startsWith(value,\"urn\"),'URN',\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column subjectDDC",
    "columnName": "subjectDDC",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column alternateIdentifier",
    "columnName": "alternateIdentifier",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column alternateIdentifierType",
    "columnName": "alternateIdentifierType",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "en_US"
        ],
        "to": "en"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "eng"
        ],
        "to": "en"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ger"
        ],
        "to": "de"
      }
    ]
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:relation to seriesInformation",
    "oldColumnName": "metadata - oai_dc:dc - dc:relation",
    "newColumnName": "seriesInformation"
  },
  {
    "op": "core/column-addition",
    "description": "Create column rightsURI at index 10 based on column metadata - oai_dc:dc - dc:rights using expression grel:if(startsWith(value,\"http\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "rightsURI",
    "columnInsertIndex": 10,
    "baseColumnName": "metadata - oai_dc:dc - dc:rights",
    "expression": "grel:if(startsWith(value,\"http\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:rights to rights",
    "oldColumnName": "metadata - oai_dc:dc - dc:rights",
    "newColumnName": "rights"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by"
        ],
        "to": "CC BY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nc-nd"
        ],
        "to": "CC BY-NC-ND"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nc-nd 2.0"
        ],
        "to": "CC BY-NC-ND 2.0"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nc-sa"
        ],
        "to": "CC BY-NC-SA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nd"
        ],
        "to": "CC BY-ND"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-sa"
        ],
        "to": "CC BY-SA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CC BY Attribution"
        ],
        "to": "CC BY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "http://creativecommons.org/licenses/by-nc-nd/4.0/"
        ],
        "to": "CC BY-NC-ND 4.0"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "http://creativecommons.org/licenses/by/4.0/"
        ],
        "to": "CC BY 4.0"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "https://creativecommons.org/licenses/by-nc-nd/2.0/"
        ],
        "to": "CC BY-NC-ND 2.0"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column rights using expression grel:if(startsWith(value,\"https://creativecommons.org/licenses/\"),value.replace(\"https://creativecommons.org/licenses/\",\"CC \").replace(\"/\",\" \").toUppercase().trim(),value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "grel:if(startsWith(value,\"https://creativecommons.org/licenses/\"),value.replace(\"https://creativecommons.org/licenses/\",\"CC \").replace(\"/\",\" \").toUppercase().trim(),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column rightsURI",
    "columnName": "rightsURI",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column metadata - oai_dc:dc - dc:type using expression grel:replace(value,\"doc-type:\",\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "metadata - oai_dc:dc - dc:type",
    "expression": "grel:replace(value,\"doc-type:\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:type to resourceType",
    "oldColumnName": "metadata - oai_dc:dc - dc:type",
    "newColumnName": "resourceType"
  },
  {
    "op": "core/column-addition",
    "description": "Create column resourceTypeGeneral at index 8 based on column resourceType using expression grel:if(isBlank(value),\"\",\"Text\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "resourceTypeGeneral",
    "columnInsertIndex": 8,
    "baseColumnName": "resourceType",
    "expression": "grel:if(isBlank(value),\"\",\"Text\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "article"
        ],
        "to": "Article"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "bachelorThesis"
        ],
        "to": "BachelorThesis"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "book"
        ],
        "to": "Book"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "bookPart"
        ],
        "to": "BookPart"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "conferenceObject"
        ],
        "to": "ConferenceObject"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "doctoralThesis"
        ],
        "to": "Dissertation"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "preprint"
        ],
        "to": "Preprint"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "workingPaper"
        ],
        "to": "Working Paper"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "masterThesis"
        ],
        "to": "Master Thesis"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "journal"
        ],
        "to": "Journal"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "report"
        ],
        "to": "Report"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "StudyThesis"
        ],
        "to": "Study Thesis"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "festschrift"
        ],
        "to": "Festschrift"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "lecture"
        ],
        "to": "Lecture"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:if(startsWith(value,\"ddc:\"),\"\",value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "subject",
    "expression": "grel:if(startsWith(value,\"ddc:\"),\"\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:replace(value,/\\d\\d\\d\\:/,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "subject",
    "expression": "grel:replace(value,/\\d\\d\\d\\:/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:replace(value,/^\\d\\d\\d$/,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "subject",
    "expression": "grel:replace(value,/^\\d\\d\\d$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column subjectBK at index 2 based on column subject using expression grel:if(isNotNull(match(value, /^\\d\\d\\.\\d\\d$/)),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "subjectBK",
    "columnInsertIndex": 2,
    "baseColumnName": "subject",
    "expression": "grel:if(isNotNull(match(value, /^\\d\\d\\.\\d\\d$/)),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column subjectBK",
    "columnName": "subjectBK",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:if(isNotNull(match(value, /^\\d\\d.\\d\\d$/)),\"\",value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "subject",
    "expression": "grel:if(isNotNull(match(value, /^\\d\\d.\\d\\d$/)),\"\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column title",
    "columnName": "title",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/column-split",
    "description": "Split column title by separator",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "title",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "||||",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-rename",
    "description": "Rename column title 1 to title",
    "oldColumnName": "title 1",
    "newColumnName": "title"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column URI",
    "columnName": "URI",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/column-split",
    "description": "Split column URI by separator",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "URI",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "||||",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-addition",
    "description": "Create column URI 3 at index 5 based on column identifier_mult using expression grel:if(startsWith(value,\"urn\"),\"https://nbn-resolving.org/resolver?identifier=\" + value.replace(\":\",\"%3A\"),\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "URI 3",
    "columnInsertIndex": 5,
    "baseColumnName": "identifier_mult",
    "expression": "grel:if(startsWith(value,\"urn\"),\"https://nbn-resolving.org/resolver?identifier=\" + value.replace(\":\",\"%3A\"),\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column URI 3 to position 6",
    "columnName": "URI 3",
    "index": 6
  },
  {
    "op": "core/column-move",
    "description": "Move column URI 3 to position 7",
    "columnName": "URI 3",
    "index": 7
  },
  {
    "op": "core/column-move",
    "description": "Move column URI 3 to position 8",
    "columnName": "URI 3",
    "index": 8
  },
  {
    "op": "core/column-move",
    "description": "Move column URI 3 to position 9",
    "columnName": "URI 3",
    "index": 9
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column URI 3",
    "columnName": "URI 3",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BookPart"
        ],
        "to": "Book Part"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CourseMaterial"
        ],
        "to": "Course Material"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "inBook"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ConferenceObject"
        ],
        "to": "Conference Object"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "PeriodicalPart"
        ],
        "to": "Periodical Part"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "BachelorThesis"
        ],
        "to": "Bachelor Thesis"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "inProceedings"
        ],
        "to": "Proceedings Part"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceType",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "contributionToPeriodical"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column resourceType",
    "columnName": "resourceType",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column resourceType using expression grel:if(value.contains(\"||||\"),value.replace(/.*\\|/,\"\"),value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceType",
    "expression": "grel:if(value.contains(\"||||\"),value.replace(/.*\\|/,\"\"),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column identifier_mult",
    "columnName": "identifier_mult"
  },
  {
    "op": "core/column-addition",
    "description": "Create column subjectACM at index 2 based on column subject using expression grel:if(isNotNull(match(value,/^\\w\\.\\d\\..$/)),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "subjectACM",
    "columnInsertIndex": 2,
    "baseColumnName": "subject",
    "expression": "grel:if(isNotNull(match(value,/^\\w\\.\\d\\..$/)),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:value.replace(/^\\w\\.\\d\\..:?/,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "subject",
    "expression": "grel:value.replace(/^\\w\\.\\d\\..:?/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column subjectACM",
    "columnName": "subjectACM",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column subject",
    "columnName": "subject",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column resourceTypeGeneral",
    "columnName": "resourceTypeGeneral",
    "keyColumnName": "identifier",
    "separator": ", "
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column resourceTypeGeneral",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "resourceTypeGeneral",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Text, Text"
        ],
        "to": "Text"
      }
    ]
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column description",
    "columnName": "description",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/column-split",
    "description": "Split column description by separator",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "description",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "||||",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-addition",
    "description": "Create column descriptionType at index 16 based on column description 1 using expression grel:if(isBlank(value),\"\",\"Abstract\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "descriptionType",
    "columnInsertIndex": 16,
    "baseColumnName": "description 1",
    "expression": "grel:if(isBlank(value),\"\",\"Abstract\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column identifierType at index 1 based on column identifier using expression grel:if(isBlank(value),\"\",\"DOI\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "identifierType",
    "columnInsertIndex": 1,
    "baseColumnName": "identifier",
    "expression": "grel:if(isBlank(value),\"\",\"DOI\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column geoLocationPointLatitude at index 1 based on column identifier using expression grel:if(isBlank(value),\"\",\"53.463558\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "geoLocationPointLatitude",
    "columnInsertIndex": 1,
    "baseColumnName": "identifier",
    "expression": "grel:if(isBlank(value),\"\",\"53.463558\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column geoLocationPointLatitude to position 30",
    "columnName": "geoLocationPointLatitude",
    "index": 30
  },
  {
    "op": "core/column-addition",
    "description": "Create column geoLocationPointLongitude at index 1 based on column identifier using expression grel:if(isBlank(value),\"\",\"9.969581\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "geoLocationPointLongitude",
    "columnInsertIndex": 1,
    "baseColumnName": "identifier",
    "expression": "grel:if(isBlank(value),\"\",\"9.969581\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column identifier to position 31",
    "columnName": "identifier",
    "index": 31
  },
  {
    "op": "core/column-move",
    "description": "Move column geoLocationPointLongitude to position 31",
    "columnName": "geoLocationPointLongitude",
    "index": 31
  },
  {
    "op": "core/column-move",
    "description": "Move column identifier to position 0",
    "columnName": "identifier",
    "index": 0
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column creatorName",
    "columnName": "creatorName",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "http://doku.b.tu-harburg.de/doku/lic_mit_pod.php"
        ],
        "to": "individuelle Lizenz"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "http://doku.b.tu-harburg.de/doku/lic_ohne_pod.php"
        ],
        "to": "individuelle Lizenz"
      }
    ]
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column rights",
    "columnName": "rights",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column rights using expression grel:value.replace(/^.*(CC\\s[\\w-]*\\s\\d\\.0).*$/,'$1')",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "grel:value.replace(/^.*(CC\\s[\\w-]*\\s\\d\\.0).*$/,'$1')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CC BY-SA||||info:eu-repo/semantics/openAccess||||CC BY-SA"
        ],
        "to": "CC BY-SA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CC BY||||info:eu-repo/semantics/openAccess"
        ],
        "to": "CC BY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "info:eu-repo/semantics/openAccess||||info:eu-repo/semantics/embargoedAccess"
        ],
        "to": "info:eu-repo/semantics/embargoedAccess"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "info:eu-repo/semantics/openAccess||||individuelle Lizenz"
        ],
        "to": "info:eu-repo/semantics/openAccess"
      }
    ]
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column contributor",
    "columnName": "contributor",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column publicationYear",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "publicationYear",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "info"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column source",
    "columnName": "source",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column seriesInformation",
    "columnName": "seriesInformation",
    "keyColumnName": "identifier",
    "separator": "||||"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column date",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "identifier",
          "omitBlank": false,
          "type": "list",
          "columnName": "identifier"
        }
      ]
    },
    "columnName": "date",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "info:eu-repo/date/embargoEnd/2017-12-05"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "identifier",
          "omitBlank": false,
          "type": "list",
          "columnName": "identifier"
        }
      ]
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "en"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "identifier",
      "identifierType",
      "alternateIdentifier",
      "alternateIdentifierType",
      "creatorName",
      "title",
      "title 2",
      "title 3",
      "publisher",
      "publicationYear",
      "subject",
      "subjectACM",
      "subjectBK",
      "subjectDDC",
      "date",
      "language",
      "rights",
      "rightsURI",
      "resourceType",
      "resourceTypeGeneral",
      "description 1",
      "descriptionType",
      "description 2",
      "description 3",
      "source",
      "seriesInformation",
      "contributor",
      "URI 1",
      "URI 2",
      "URI 3",
      "geoLocationPointLatitude",
      "geoLocationPointLongitude"
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column identifier using expression grel:replace(value,\"https://doi.org/\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "identifier",
    "expression": "grel:replace(value,\"https://doi.org/\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column identifier using expression grel:replace(value, \"doi: \",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "identifier",
    "expression": "grel:replace(value, \"doi: \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": true,
          "selection": [],
          "selectError": false,
          "invert": false,
          "name": "identifier",
          "omitBlank": false,
          "type": "list",
          "columnName": "identifier"
        }
      ]
    }
  },
  {
    "op": "core/column-rename",
    "description": "Rename column description 1 to description",
    "oldColumnName": "description 1",
    "newColumnName": "description"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:replace(value,\"||||\",\"␟\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Abscheidung der Leuchtstoffbeschichtungen mit verbesserten Eigenschaften mittels Flammensprühpyrolyse",
                "l": "Abscheidung der Leuchtstoffbeschichtungen mit verbesserten Eigenschaften mittels Flammensprühpyrolyse"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "title 3",
          "omitBlank": false,
          "type": "list",
          "columnName": "title 3"
        }
      ]
    },
    "columnName": "subject",
    "expression": "grel:replace(value,\"||||\",\"␟\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column title 3 using expression grel:if(contains(value,cells[\"title 2\"].value),\"\",value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "title 3",
    "expression": "grel:if(contains(value,cells[\"title 2\"].value),\"\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column title 3",
    "columnName": "title 3"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column title 2 using expression grel:if(contains(value,cells[\"title\"].value),\"\",value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "title 2",
    "expression": "grel:if(contains(value,cells[\"title\"].value),\"\",value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column title 2 to alternativeTitle",
    "oldColumnName": "title 2",
    "newColumnName": "alternativeTitle"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subject using expression grel:value.replace(\"||||\",\"␟\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "subject",
    "expression": "grel:value.replace(\"||||\",\"␟\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subjectACM using expression grel:value.replace(\"||||\",\"␟\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "subjectACM",
    "expression": "grel:value.replace(\"||||\",\"␟\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subjectBK using expression grel:value.replace(/([0-9]{2})([0-9]{2})/, \"$1␟$2\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "subjectBK",
    "expression": "grel:value.replace(/([0-9]{2})([0-9]{2})/, \"$1␟$2\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column subjectDDC using expression grel:value.replace(/([0-9]{3})([0-9]{3})/, \"$1␟$2\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "subjectDDC",
    "expression": "grel:value.replace(/([0-9]{3})([0-9]{3})/, \"$1␟$2\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column subjectACM to subject_acm",
    "oldColumnName": "subjectACM",
    "newColumnName": "subject_acm"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column subjectBK to subject_bk",
    "oldColumnName": "subjectBK",
    "newColumnName": "subject_bk"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column subjectDDC to subject_ddc",
    "oldColumnName": "subjectDDC",
    "newColumnName": "subject_ddc"
  },
  {
    "op": "core/column-addition",
    "description": "Create column dateType at index 14 based on column date using expression grel:if(isBlank(value),\"\",\"Issued\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "dateType",
    "columnInsertIndex": 14,
    "baseColumnName": "date",
    "expression": "grel:if(isBlank(value),\"\",\"Issued\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column otherDescription at index 23 based on column description 2 using expression grel:value + (if(isBlank(cells[\"description 3\"].value) , \"\", \"␟\" + cells[\"description 3\"].value))",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "otherDescription",
    "columnInsertIndex": 23,
    "baseColumnName": "description 2",
    "expression": "grel:value + (if(isBlank(cells[\"description 3\"].value) , \"\", \"␟\" + cells[\"description 3\"].value))",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column description 2",
    "columnName": "description 2"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column description 3",
    "columnName": "description 3"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column source using expression grel:value.replace(\"||||\",\"␟\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "source",
    "expression": "grel:value.replace(\"||||\",\"␟\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column seriesInformation using expression grel:replace(value,'||||',';')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "seriesInformation",
    "expression": "grel:replace(value,'||||',';')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column contributor using expression grel:replace(value,\"||||\",\"␟\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "contributor",
    "expression": "grel:replace(value,\"||||\",\"␟\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column url at index 27 based on column URI 1 using expression grel:value + if(isBlank(cells[\"URI 2\"].value),\"\",\"␟\" + cells[\"URI 2\"].value) + if(isBlank(cells[\"URI 3\"].value),\"\",\"␟\" + cells[\"URI 3\"].value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "url",
    "columnInsertIndex": 27,
    "baseColumnName": "URI 1",
    "expression": "grel:value + if(isBlank(cells[\"URI 2\"].value),\"\",\"␟\" + cells[\"URI 2\"].value) + if(isBlank(cells[\"URI 3\"].value),\"\",\"␟\" + cells[\"URI 3\"].value)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column URI 1",
    "columnName": "URI 1"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column URI 2",
    "columnName": "URI 2"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column URI 3",
    "columnName": "URI 3"
  },
  {
    "op": "core/column-addition",
    "description": "Create column geoLocationPoint at index 28 based on column geoLocationPointLatitude using expression grel:value + \",\" +cells[\"geoLocationPointLongitude\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "geoLocationPoint",
    "columnInsertIndex": 28,
    "baseColumnName": "geoLocationPointLatitude",
    "expression": "grel:value + \",\" +cells[\"geoLocationPointLongitude\"].value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column geoLocationPointLatitude",
    "columnName": "geoLocationPointLatitude"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column geoLocationPointLongitude",
    "columnName": "geoLocationPointLongitude"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column contributor to contributorName",
    "oldColumnName": "contributor",
    "newColumnName": "contributorName"
  },
  {
    "op": "core/column-addition",
    "description": "Create column id at index 1 based on column identifier using expression grel:replace(value,\"/\",\"_\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "id",
    "columnInsertIndex": 1,
    "baseColumnName": "identifier",
    "expression": "grel:replace(value,\"/\",\"_\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column id to position 0",
    "columnName": "id",
    "index": 0
  }
]
