[
  {
    "op": "core/column-removal",
    "description": "Remove column metadata",
    "columnName": "metadata"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column metadata - oai_dc:dc",
    "columnName": "metadata - oai_dc:dc"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:description to description",
    "oldColumnName": "metadata - oai_dc:dc - dc:description",
    "newColumnName": "description"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:title to title",
    "oldColumnName": "metadata - oai_dc:dc - dc:title",
    "newColumnName": "title"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:language to language",
    "oldColumnName": "metadata - oai_dc:dc - dc:language",
    "newColumnName": "language"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:creator to creatorName",
    "oldColumnName": "metadata - oai_dc:dc - dc:creator",
    "newColumnName": "creatorName"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:date to date",
    "oldColumnName": "metadata - oai_dc:dc - dc:date",
    "newColumnName": "date"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:publisher to publisher",
    "oldColumnName": "metadata - oai_dc:dc - dc:publisher",
    "newColumnName": "publisher"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column metadata - oai_dc:dc - xsi:schemaLocation",
    "columnName": "metadata - oai_dc:dc - xsi:schemaLocation"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:subject to subject",
    "oldColumnName": "metadata - oai_dc:dc - dc:subject",
    "newColumnName": "subject"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:identifier to identifier",
    "oldColumnName": "metadata - oai_dc:dc - dc:identifier",
    "newColumnName": "identifier"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:contributor to contributor",
    "oldColumnName": "metadata - oai_dc:dc - dc:contributor",
    "newColumnName": "contributor"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:source to source",
    "oldColumnName": "metadata - oai_dc:dc - dc:source",
    "newColumnName": "source"
  },
  {
    "op": "core/column-addition",
    "description": "Create column publicationYear at index 9 based on column date using expression grel:substring(value,0,4)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "publicationYear",
    "columnInsertIndex": 9,
    "baseColumnName": "date",
    "expression": "grel:substring(value,0,4)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column subjectDDC at index 1 based on column subject using expression grel:if(startsWith(value,\"ddc:\"),substring(value,4,9),\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "subjectDDC",
    "columnInsertIndex": 1,
    "baseColumnName": "subject",
    "expression": "grel:if(startsWith(value,\"ddc:\"),substring(value,4,9),\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column URI at index 3 based on column identifier using expression grel:if(startsWith(value,\"http\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "URI",
    "columnInsertIndex": 3,
    "baseColumnName": "identifier",
    "expression": "grel:if(startsWith(value,\"http\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column identifier to identifier_mult",
    "oldColumnName": "identifier",
    "newColumnName": "identifier_mult"
  },
  {
    "op": "core/column-addition",
    "description": "Create column identifier at index 3 based on column identifier_mult using expression grel:replace(value,\"http://dx.doi.org/\",\"\")value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "doi",
          "name": "identifier_mult",
          "type": "text",
          "columnName": "identifier_mult"
        }
      ]
    },
    "newColumnName": "identifier",
    "columnInsertIndex": 3,
    "baseColumnName": "identifier_mult",
    "expression": "grel:replace(value,\"http://dx.doi.org/\",\"\")value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-move",
    "description": "Move column identifier to position 0",
    "columnName": "identifier",
    "index": 0
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "record-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": true,
          "name": "identifier",
          "omitBlank": false,
          "type": "list",
          "columnName": "identifier"
        }
      ]
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column alternateIdentifier at index 4 based on column identifier_mult using expression grel:if(startsWith(value,\"urn\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "alternateIdentifier",
    "columnInsertIndex": 4,
    "baseColumnName": "identifier_mult",
    "expression": "grel:if(startsWith(value,\"urn\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column alternateIdentifierType at index 5 based on column alternateIdentifier using expression grel:if(startsWith(value,\"urn\"),'URN',\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "alternateIdentifierType",
    "columnInsertIndex": 5,
    "baseColumnName": "alternateIdentifier",
    "expression": "grel:if(startsWith(value,\"urn\"),'URN',\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column subjectDDC",
    "columnName": "subjectDDC",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column alternateIdentifier",
    "columnName": "alternateIdentifier",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column alternateIdentifierType",
    "columnName": "alternateIdentifierType",
    "keyColumnName": "identifier",
    "separator": ""
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "en_US"
        ],
        "to": "en"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "eng"
        ],
        "to": "en"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column language",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "language",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "ger"
        ],
        "to": "de"
      }
    ]
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:relation to seriesInformation",
    "oldColumnName": "metadata - oai_dc:dc - dc:relation",
    "newColumnName": "seriesInformation"
  },
  {
    "op": "core/column-addition",
    "description": "Create column rightsURI at index 10 based on column metadata - oai_dc:dc - dc:rights using expression grel:if(startsWith(value,\"http\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "rightsURI",
    "columnInsertIndex": 10,
    "baseColumnName": "metadata - oai_dc:dc - dc:rights",
    "expression": "grel:if(startsWith(value,\"http\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column metadata - oai_dc:dc - dc:rights to rights",
    "oldColumnName": "metadata - oai_dc:dc - dc:rights",
    "newColumnName": "rights"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by"
        ],
        "to": "CC BY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nc-nd"
        ],
        "to": "CC BY-NC-ND"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nc-nd 2.0"
        ],
        "to": "CC BY-NC-ND 2.0"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nc-sa"
        ],
        "to": "CC BY-NC-SA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-nd"
        ],
        "to": "CC BY-ND"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "by-sa"
        ],
        "to": "CC BY-SA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "CC BY Attribution"
        ],
        "to": "CC BY"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "http://creativecommons.org/licenses/by-nc-nd/4.0/"
        ],
        "to": "CC BY-NC-ND 4.0"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "http://creativecommons.org/licenses/by/4.0/"
        ],
        "to": "CC BY 4.0"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column rights",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "https://creativecommons.org/licenses/by-nc-nd/2.0/"
        ],
        "to": "CC BY-NC-ND 2.0"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column rights using expression grel:if(startsWith(value,\"https://creativecommons.org/licenses/\"),value.replace(\"https://creativecommons.org/licenses/\",\"CC \").replace(\"/\",\" \").toUppercase().trim(),value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "rights",
    "expression": "grel:if(startsWith(value,\"https://creativecommons.org/licenses/\"),value.replace(\"https://creativecommons.org/licenses/\",\"CC \").replace(\"/\",\" \").toUppercase().trim(),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column rightsURI",
    "columnName": "rightsURI",
    "keyColumnName": "identifier",
    "separator": ""
  }
]
