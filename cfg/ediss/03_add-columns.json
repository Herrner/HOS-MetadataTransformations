[
  {
    "op": "core/column-addition",
    "description": "Create column subject_ddc at index 14 based on column Record - header - setSpec using expression grel:if(value.startsWith(\"ddc:\"),value.replace(\"ddc:\",\"\"),\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "subject_ddc",
    "columnInsertIndex": 14,
    "baseColumnName": "Record - header - setSpec",
    "expression": "grel:if(value.startsWith(\"ddc:\"),value.replace(\"ddc:\",\"\"),\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column publisher at index 4 based on column dc:publisher using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "publisher",
    "columnInsertIndex": 4,
    "baseColumnName": "dc:publisher",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
 
  {
    "op": "core/column-addition",
    "description": "Create column url at index 3 based on column dc:identifier using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "url",
    "columnInsertIndex": 3,
    "baseColumnName": "dc:identifier",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  
  {
    "op": "core/column-addition",
    "description": "Create column abstract at index 8 based on column dc:description using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "abstract",
    "columnInsertIndex": 8,
    "baseColumnName": "dc:description",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column language at index 14 based on column dc:language using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "language",
    "columnInsertIndex": 14,
    "baseColumnName": "dc:language",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
    {
    "op": "core/column-addition",
    "description": "Create column geoLocationPoint at index 6 based on column publisher using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "geoLocationPoint",
    "columnInsertIndex": 6,
    "baseColumnName": "publisher",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column title at index 8 based on column dc:title using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "title",
    "columnInsertIndex": 8,
    "baseColumnName": "dc:title",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/multivalued-cell-join",
    "description": "Join multi-valued cells in column title",
    "columnName": "title",
    "keyColumnName": "id",
    "separator": "␟"
  },
  {
    "op": "core/column-split",
    "description": "Split column title by separator",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "title",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "␟",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-rename",
    "description": "Rename column title 1 to title",
    "oldColumnName": "title 1",
    "newColumnName": "title"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column title 2 to translatedTitle",
    "oldColumnName": "title 2",
    "newColumnName": "translatedTitle"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column title 3 to otherTitle",
    "oldColumnName": "title 3",
    "newColumnName": "otherTitle"
  },
  {
    "op": "core/column-addition",
    "description": "Create column titleLang at index 18 based on column dc:language using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "titleLang",
    "columnInsertIndex": 18,
    "baseColumnName": "dc:language",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
    {
    "op": "core/column-addition",
    "description": "Create column format at index 21 based on column dc:format using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "format",
    "columnInsertIndex": 21,
    "baseColumnName": "dc:format",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column resourceType at index 16 based on column dc:type using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "resourceType",
    "columnInsertIndex": 16,
    "baseColumnName": "dc:type",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column resourceTypeGeneral at index 17 based on column resourceType using expression grel:if(isNotNull(value),\"Text\",\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "resourceTypeGeneral",
    "columnInsertIndex": 17,
    "baseColumnName": "resourceType",
    "expression": "grel:if(isNotNull(value),\"Text\",\"\")",
    "onError": "set-to-blank"
  },
    {
    "op": "core/column-addition",
    "description": "Create column subject at index 2 based on column dc:subject using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "subject",
    "columnInsertIndex": 2,
    "baseColumnName": "dc:subject",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column identifier at index 4 based on column dc:identifier using expression grel:if(value.startsWith(\"urn\"),value,\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "identifier",
    "columnInsertIndex": 4,
    "baseColumnName": "dc:identifier",
    "expression": "grel:if(value.startsWith(\"urn\"),value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column identifierType at index 5 based on column identifier using expression grel:if(value.startsWith(\"urn\"),\"URN\",\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "identifierType",
    "columnInsertIndex": 5,
    "baseColumnName": "identifier",
    "expression": "grel:if(value.startsWith(\"urn\"),\"URN\",\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column creatorName at index 17 based on column dc:creator using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "creatorName",
    "columnInsertIndex": 17,
    "baseColumnName": "dc:creator",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column publicationYear at index 19 based on column dc:date using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "publicationYear",
    "columnInsertIndex": 19,
    "baseColumnName": "dc:date",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column date at index 33 based on column Record - header - datestamp using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "date",
    "columnInsertIndex": 33,
    "baseColumnName": "Record - header - datestamp",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column dateType at index 33 based on column Record - header - datestamp using expression grel:if(isNotNull(value),\"Issued\",\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "dateType",
    "columnInsertIndex": 33,
    "baseColumnName": "Record - header - datestamp",
    "expression": "grel:if(isNotNull(value),\"Issued\",\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column seriesInformation at index 20 based on column Record - metadata - oai_dc:dc - dc:source using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "seriesInformation",
    "columnInsertIndex": 20,
    "baseColumnName": "Record - metadata - oai_dc:dc - dc:source",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column rightsURL at index 17 based on column dc:rights using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "rightsURL",
    "columnInsertIndex": 17,
    "baseColumnName": "dc:rights",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column rights at index 17 based on column dc:rights using expression grel:if(isNotNull(value),\"repository license\",\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "rights",
    "columnInsertIndex": 17,
    "baseColumnName": "dc:rights",
    "expression": "grel:if(isNotNull(value),\"repository license\",\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column university at index 8 based on column dc:publisher using expression grel:value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "university",
    "columnInsertIndex": 8,
    "baseColumnName": "dc:publisher",
    "expression": "grel:value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column institute at index 8 based on column dc:publisher using expression grel:if(isNotNull(value.match(/.+\\.\\s.+/)),value.split(\".\")[0],\"\")",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "institute",
    "columnInsertIndex": 8,
    "baseColumnName": "dc:publisher",
    "expression": "grel:if(isNotNull(value.match(/.+\\.\\s.+/)),value.split(\".\")[0],\"\")",
    "onError": "set-to-blank"
  }
]
